#- hosts: docker_hosts
- name: "Ansible playbook example"
  hosts: 127.0.0.1
  connection: local
  vars: 
    path_docker_compose: /usr/local/bin/docker-compose
    distr_release: Eoan
#    "{{ ansible_distribution_release }}"
  tasks:
    - name: remove docer apt
      apt: name={{ item }} state=absent purge=yes
      with_items:
        - docker
        - docker-engine
        - docker.io
        - containerd
        - runc 
      become: true
      when: ansible_pkg_mgr == "apt"

    - name: remove docer yum
      yum: name={{ item }} state=absent
      with_items:
        - docker
        - docker-client
        - docker-client-latest
        - docker-common
        - docker-latest
        - docker-latest-logrotate
        - docker-logrotate
        - docker-engine
      become: true
      when: ansible_pkg_mgr == "yum"


    - name: install environment docker apt
      apt: 
        name: 
            - apt-transport-https 
            - ca-certificates 
            - curl 
            - gnupg-agent 
            - software-properties-common
        state: present 
        update_cache: yes
      become: yes
      when: ansible_pkg_mgr == "apt"

    - name: install environment docker yum
      yum: name=yum-utils state=present
      become: yes
      when: ansible_pkg_mgr == "yum"

    - name: Add an Apt signing key, uses whichever key is at the URL
      apt_key:
        url: https://download.docker.com/{{ ansible_system | lower }}/{{ ansible_distribution | lower }}/gpg
        state: present
      when: ansible_pkg_mgr == "apt"
      become: yes

    - name: Add specified repository into sources list apt.
      apt_repository:
        repo: deb https://download.docker.com/{{ ansible_system | lower }}/{{ ansible_distribution | lower }} {{ distr_release | lower }}  stable
        state: present
      when: ansible_pkg_mgr == "apt"
      become: true

    - stat:
        path: /etc/yum.repos.d/docker-ce.repo
      when: ansible_pkg_mgr == "yum"
      register: docker_rep_yum

    - name: Add specified repository into sources list yum.
      command: yum-config-manager --add-repo https://download.docker.com/{{ ansible_system | lower }}/{{ ansible_distribution | lower }}/docker-ce.repo
      when: ansible_pkg_mgr == "yum" and docker_rep_yum.stat.exists == False
      become: true

    - name: install docker
      apt:
        name:
           - docker-ce
           - docker-ce-cli
           - containerd.io
        state: present
        update_cache: yes
      when: ansible_pkg_mgr == "apt"
      become: true

    - name: install docker yum
      yum:
        name:
           - docker-ce
           - docker-ce-cli
           - containerd.io
        state: present
      when: ansible_pkg_mgr == "yum"
      become: true

    - name: Docker is enable
      systemd:
        name: docker
        state: started
        enabled: yes
      become: true

    - name: Copy config daemon
      copy:
        src: file/daemon.json
        dest: /etc/docker/daemon.json
        group: root
        owner: root
      notify:
         - Docker is restart
         - test docker
         - clear for docker
         - clear for docker iamge
         - verification testa docker start
      become: true
      tags: config_docker

    - name: Add groups 'docker' the user 'cosysoft'  
      user:
        name: cosysoft
        groups: docker
        append: yes
      become: true
      tags: usermod

#    - name: environment dor Docker-compose
#      shell: uname -m
#      ignore_errors: yes
#      register: uname_result
#      tags: install_compose
#      {{ uname_result.stdout }}

    - stat:
        path: "{{ path_docker_compose }}"
      register: docker_compose

    - name: Download compose
      get_url:
         url: https://github.com/docker/compose/releases/download/1.25.5/docker-compose-{{ ansible_system }}-{{ ansible_architecture }}
         dest: "{{ path_docker_compose }}"
         mode: '0755'
      notify:
         - Create a symbolic linc Compose
         - test docker-compose
         - verification test docker-compose
      become: true
      when: docker_compose.stat.exists == False
      tags: install_compose


  handlers:
    - name: Docker is restart
      systemd:
        name: docker
        state: restarted
        enabled: yes
      become: true

    - name: test docker
      command: docker run --name hello_world hello-world
      become: true
      register: result

    - name: verification testa docker start
      debug:
        msg: Run docker {{ result.stdout }}

    - name: clear for docker
      command: docker container rm hello_world
      become: yes
#      become_user: cosysoft

    - name: clear for docker iamge
      command: docker image rm hello-world:latest
      become: yes
#      become_user: cosysoft

    - name: Create a symbolic linc Compose
      file:
        src: "{{ path_docker_compose }}"
        dest: /usr/bin/docker-compose
        owner: root
        group: root
        state: link
      become: true
      tags: install_compose

    - name: test docker-compose
      command: docker-compose --version
      become: true
      register: result
      tags: test_docker-compose

    - name: verification test docker-compose
      debug:
        msg: Run docker {{ result.stdout }}
      tags: test_docker-compose
